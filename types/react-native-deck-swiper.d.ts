import * as React from 'react';

 interface SwiperProps  {
  animateCardOpacity?: boolean;
  animateOverlayLabelsOpacity?: boolean;
  backgroundColor?: string;
  cardHorizontalMargin?: number;
  cardIndex?: number;
  cardStyle?: number | object;
  cardVerticalMargin?: number;
  cards: any[] | object;
  containerStyle?: object;
  childrenOnTop?: boolean;
  dragEnd?: (...args: any[]) => any;
  dragStart?: (...args: any[]) => any;
  disableBottomSwipe?: boolean;
  disableLeftSwipe?: boolean;
  disableRightSwipe?: boolean;
  disableTopSwipe?: boolean;
  goBackToPreviousCardOnSwipeBottom?: boolean;
  goBackToPreviousCardOnSwipeLeft?: boolean;
  goBackToPreviousCardOnSwipeRight?: boolean;
  goBackToPreviousCardOnSwipeTop?: boolean;
  horizontalSwipe?: boolean;
  horizontalThreshold?: number;
  infinite?: boolean;
  inputCardOpacityRangeX?: any[];
  inputCardOpacityRangeY?: any[];
  inputOverlayLabelsOpacityRangeX?: any[];
  inputOverlayLabelsOpacityRangeY?: any[];
  inputCardOpacityRange?: any[];
  inputRotationRange?: any[];
  keyExtractor?: (...args: any[]) => any;
  marginBottom?: number;
  marginTop?: number;
  onSwiped?: (...args: any[]) => any;
  onSwipedAborted?: (...args: any[]) => any;
  onSwipedAll?: (...args: any[]) => any;
  onSwipedBottom?: (...args: any[]) => any;
  onSwipedLeft?: (...args: any[]) => any;
  onSwipedRight?: (...args: any[]) => any;
  onSwipedTop?: (...args: any[]) => any;
  onSwiping?: (...args: any[]) => any;
  onTapCard?: (...args: any[]) => any;
  onTapCardDeadZone?: number;
  outputCardOpacityRangeX?: any[];
  outputCardOpacityRangeY?: any[];
  outputOverlayLabelsOpacityRangeX?: any[];
  outputOverlayLabelsOpacityRangeY?: any[];
  outputRotationRange?: any[];
  outputCardOpacityRange?: any[];
  overlayLabels?: object;
  overlayLabelStyle?: object;
  overlayLabelWrapperStyle?: object;
  overlayOpacityHorizontalThreshold?: number;
  overlayOpacityVerticalThreshold?: number;
  pointerEvents?: 'box-none' | 'none' | 'box-only' | 'auto';
  previousCardDefaultPositionX?: number;
  previousCardDefaultPositionY?: number;
  renderCard: (...args: any[]) => any;
  secondCardZoom?: number;
  showSecondCard?: boolean;
  stackAnimationFriction?: number;
  stackAnimationTension?: number;
  stackScale?: number;
  stackSeparation?: number;
  stackSize?: number;
  swipeAnimationDuration?: number;
  swipeBackCard?: boolean;
  topCardResetAnimationFriction?: number;
  topCardResetAnimationTension?: number;
  useViewOverflow?: boolean;
  verticalSwipe?: boolean;
  verticalThreshold?: number;
  zoomAnimationDuration?: number;
  zoomFriction?: number;
}

export default class Swiper extends React.Component<SwiperProps, {}, any> {}
